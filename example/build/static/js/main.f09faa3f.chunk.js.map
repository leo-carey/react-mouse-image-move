{"version":3,"sources":["../../src/components/ChasingElement/index.tsx","../../src/components/MouseContainer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChasingElement","styles","props","React","style","MouseContainer","chasingElement","options","wrapperElement","useRef","useState","setStyle","width","height","left","top","transitionTimeout","updateCall","elementChildProperties","setElementChildProperties","settings","max","perspective","easing","scale","speed","axis","reset","useEffect","clearTimeout","cancelAnimationFrame","setTransition","transition","update","e","values","x","y","_x","Math","_y","tiltX","tiltY","percentageX","percentageY","getValues","transform","ref","flex","display","alignItems","justifyContent","onMouseEnter","element","rect","updateChildPosition","onMouseMove","requestAnimationFrame","onMouseLeave","window","mouseContainer","backgroundColor","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f09faa3f.chunk.js","sourcesContent":["import React from 'react'\nimport ChasingElementInterface from '../../interfaces/ChasingElementInterface'\n\nconst ChasingElement: React.FC<ChasingElementInterface> = ({ styles, ...props }) => {\n  return (\n    <div style={styles} {...props}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default ChasingElement\n","import React, { useState, useRef, useEffect } from 'react'\nimport ChasingElement from '../ChasingElement'\nimport ElementChildPropertiesInterface from '../../interfaces/ElementChildPropertiesInterface'\nimport MouseContainerInterface from '../../interfaces/MouseContainerInterface'\n\nconst MouseContainer: React.FC<MouseContainerInterface> = ({ chasingElement, styles, options, ...props }) => {\n  const wrapperElement = useRef(null)\n\n  const initElementChildProperties: ElementChildPropertiesInterface = {\n    width: 0,\n    height: 0,\n    left: 0,\n    top: 0,\n    transitionTimeout: null,\n    updateCall: 0\n  }\n\n  const defaultStyles = {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n\n  const [style, setStyle] = useState(chasingElement.props.styles)\n  const [elementChildProperties, setElementChildProperties] = useState(initElementChildProperties)\n\n  const defaultSettings = {\n    max: 30,\n    perspective: 1000,\n    easing: 'cubic-bezier(.03,.98,.52,.99)',\n    scale: 1.1,\n    speed: 1000,\n    axis: null,\n    reset: true\n  }\n\n  const settings = {\n    ...defaultSettings,\n    ...options\n  }\n\n  useEffect(() => {}, [])\n\n  useEffect(() => {\n    return () => {\n      elementChildProperties.transitionTimeout && clearTimeout(elementChildProperties.transitionTimeout)\n      cancelAnimationFrame(elementChildProperties.updateCall)\n    }\n  }, [elementChildProperties])\n\n  const updateChildPosition = (element: any) => {\n    const rect = element.currentTarget.getBoundingClientRect()\n\n    setElementChildProperties({\n      ...elementChildProperties,\n      width: element.currentTarget.offsetWidth,\n      height: element.currentTarget.offsetHeight,\n      left: rect.left,\n      top: rect.top\n    })\n  }\n\n  const setTransition = () => {\n    setStyle({\n      ...style,\n      transition: `${settings.speed}ms ${settings.easing}`\n    })\n  }\n\n  const getValues = (e: any) => {\n    const x = (e.nativeEvent.clientX - elementChildProperties.left) / elementChildProperties.width\n    const y = (e.nativeEvent.clientY - elementChildProperties.top) / elementChildProperties.height\n    const _x = Math.min(Math.max(x, 0), 1)\n    const _y = Math.min(Math.max(y, 0), 1)\n    const tiltX = (settings.max / 2 - _x * settings.max).toFixed(2)\n    const tiltY = (_y * settings.max - settings.max / 2).toFixed(2)\n    const percentageX = _x * 100\n    const percentageY = _y * 100\n\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    }\n  }\n\n  const update = (e: any) => {\n    const values = getValues(e)\n\n    setStyle({\n      ...style,\n      transform: `\n                perspective(${settings.perspective}px)\n                rotateX(${settings.axis === 'x' ? 0 : values.tiltY}deg)\n                rotateY(${settings.axis === 'y' ? 0 : values.tiltX}deg)\n                scale3d(${settings.scale}, ${settings.scale}, ${settings.scale})`\n    })\n\n    elementChildProperties.updateCall = null\n  }\n\n  const reset = () => {\n    window.requestAnimationFrame(() => {\n      setStyle({\n        ...style,\n        transform: `\n                    perspective(1000px)\n                    rotateX(0deg)\n                    rotateY(0deg)\n                    scale3d(1, 1, 1)\n                `\n      })\n    })\n  }\n\n  const handleMouseEnter = (e: any) => {\n    updateChildPosition(e)\n    setTransition()\n  }\n\n  const handleMouseMove = (e: any) => {\n    e.persist()\n\n    if (elementChildProperties.updateCall !== null) {\n      cancelAnimationFrame(elementChildProperties.updateCall)\n    }\n\n    elementChildProperties.updateCall = requestAnimationFrame(update.bind(wrapperElement, e))\n  }\n\n  const handleMouseLeave = () => {\n    setTransition()\n\n    if (settings.reset) {\n      reset()\n    }\n  }\n\n  return (\n    <div\n      ref={wrapperElement}\n      style={{\n        ...defaultStyles,\n        ...styles\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      <ChasingElement styles={style}>\n        {chasingElement}\n      </ChasingElement>\n    </div>\n  )\n}\n\nexport default MouseContainer\n","import React from 'react'\r\n\r\nimport { MouseContainer, ChasingElement } from 'react-mouse-image-move'\r\nimport './App.css'\r\n\r\nconst styles = {\r\n  mouseContainer: {\r\n    backgroundColor: '#d3eeca',\r\n    width: '100%',\r\n    height: '70vh'\r\n  },\r\n  chasingElement: {\r\n    backgroundColor: '#7771c7',\r\n    width: 400,\r\n    height: 300\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <header className='App-header'>React Mouse Image Move</header>\r\n\r\n      <MouseContainer\r\n        options={{\r\n          max: 20,\r\n          perspective: 1000,\r\n          scale: 1.05,\r\n          speed: 1000,\r\n          transition: false\r\n        }}\r\n        styles={styles.mouseContainer}\r\n        chasingElement={\r\n          <ChasingElement styles={styles.chasingElement}>\r\n            <div />\r\n          </ChasingElement>\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}